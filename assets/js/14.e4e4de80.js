(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{513:function(s,a,t){s.exports=t.p+"assets/img/instance-class-meta_class-02.06bc5150.png"},514:function(s,a,t){s.exports=t.p+"assets/img/instance-class-meta_class-01.2c09f9b5.png"},543:function(s,a,t){"use strict";t.r(a);var e=t(6),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[e("em",[s._v("Copyright 2010 Matt Gallagher: "),e("a",{attrs:{href:"https://cocoawithlove.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("cocoawithlove.com"),e("OutboundLink")],1),s._v(".")])]),s._v(" "),e("p",[s._v("原文: "),e("a",{attrs:{href:"http://www.cocoawithlove.com/2010/01/what-is-meta-class-in-objective-c.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("What is a meta-class in Objective-C?"),e("OutboundLink")],1),s._v(". 本文由原作者授权翻译")]),s._v(" "),e("p",[s._v("在这篇文章中，我着重讲解Objective-C中的一个陌生的概念 - meta-class。Objective-C中的每个类都有一个与之关联的"),e("code",[s._v("meta-class")]),s._v('，但因为你很少直接使用它，它才会对你显得如此神秘。我将从如何使用runtime机制创建一个类说起。通过检查 objc_allocateClassPair 函数创建出的 "class pair" ，我将解释什么是meta-class，也会解释一些普遍存在的问题：在Objective-C中，meta-class 对一个对象或者一个类有着怎样的意义?\n')]),s._v(" "),e("h3",{attrs:{id:"在程序运行的时候创建一个类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在程序运行的时候创建一个类"}},[s._v("#")]),s._v(" 在程序运行的时候创建一个类")]),s._v(" "),e("p",[s._v("在程序运行的时候,下面的代码创建了一个"),e("code",[s._v("NSError")]),s._v("的子类，并给它添加了一个方法。")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[s._v("Class newClass "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("objc_allocateClassPair")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSError class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RuntimeErrorSubclass"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("class_addMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newClass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IMP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ReportFunction"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v@:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("objc_registerClassPair")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newClass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("这个被添加的方法使用"),e("code",[s._v("ReportFunction")]),s._v("函数作为它的实现。"),e("code",[s._v("ReportFunction")]),s._v("函数的定义如下:")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ReportFunction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SEL _cmd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"This object is %p."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"Class is %@, and super is %@."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),s._v(" class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),s._v(" superclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    Class currentClass "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),s._v(" class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"Following the isa pointer %d times gives %p"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" currentClass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        currentClass "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("object_getClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentClass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"NSObject\'s class is %p"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSObject class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"NSObject\'s meta class is %p"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("object_getClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSObject class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("表面上来看,这一切都很简单。")]),s._v(" "),e("p",[s._v("因为在程序运行的时候创建一个类只需要这三个简单的步骤:")]),s._v(" "),e("blockquote"),s._v(" "),e("ol",[e("li",[s._v("为"),e("code",[s._v("class pair")]),s._v("开辟内存空间(使用"),e("code",[s._v("objc_allocateClassPair")]),s._v(").")]),s._v(" "),e("li",[s._v("按照函数所需要,去给类添加方法和成员变量(我已经使用"),e("code",[s._v("class_addMethod")]),s._v("添加了一个方法)")]),s._v(" "),e("li",[s._v("注册这个类,以便能够使用它(使用 "),e("code",[s._v("objc_registerClassPair")]),s._v(").")])]),s._v(" "),e("p",[s._v("但是，现在的问题是：什么是"),e("code",[s._v("class pair")]),s._v("? "),e("code",[s._v("objc_allocateClassPair")]),s._v("函数只返回了一个值: 类。那这个"),e("code",[s._v("class pair")]),s._v("的另一半又在哪呢？我相信你已经猜到了:"),e("code",[s._v("class pair")]),s._v("的另一半就是"),e("code",[s._v("meta-class")]),s._v("（它是这篇文章的标题），但我需要向你解释它是什么,为什么你需要它，我将会给出一些Objectivce-C中的类和对象的背景。")]),s._v(" "),e("h3",{attrs:{id:"让一个数据结构变成一个对象-需要些什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#让一个数据结构变成一个对象-需要些什么"}},[s._v("#")]),s._v(" 让一个数据结构变成一个对象，需要些什么?")]),s._v(" "),e("p",[s._v("每一个对象都有一个类，这是面对对象的基本概念，但是在Objectivce-C中，它也是数据的基本组成部分(每个对象都拥有一个指向类结构体的指针)。任何 拥有一个指向在正确位置的类的指针 的数据结构都可以被视为一个对象。")]),s._v(" "),e("p",[s._v("在Objectivce-C中，一个对象的类被一个"),e("code",[s._v("isa")]),s._v("指针所决定。这个"),e("code",[s._v("isa")]),s._v("指针指向对象的类。")]),s._v(" "),e("p",[s._v("实际上，在Objectivce-C中，一个对象的基础定义是这样的:")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" objc_object "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   Class isa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("👆这个定义说明:任何一个 以指向一个"),e("code",[s._v("Class")]),s._v("结构体的指针 开始的结构体都能够被视为一个对象。")]),s._v(" "),e("p",[s._v("在Objectivce-C中，对象最重要的功能就是我们能够给它们发送消息:")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"stringValue"')]),s._v(" writeToFile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"/file.txt"')]),s._v(" atomically"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("YES encoding"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("NSUTF8StringEncoding error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这段代码之所以会执行,是因为当你向一个OC对象发送一个消息的时候(像这里的"),e("code",[s._v("NSCFString")]),s._v("),runtime机制会沿着对象的"),e("code",[s._v("isa")]),s._v("指针去获取对象的"),e("code",[s._v("Class")]),s._v("(在这里是"),e("code",[s._v("NSCFString")]),s._v("类)。接着,这个"),e("code",[s._v("Class")]),s._v("包含了一个适用于该类的所有对象的方法列表(拥有所有对象方法的列表)和一个指向超类的指针(用于查阅继承的方法)。由于获取到了对象对应的"),e("code",[s._v("Class")]),s._v(",这时,运行时机制会为了找到一个和消息选择器匹配的方法，浏览在"),e("code",[s._v("Class")]),s._v("和"),e("code",[s._v("superclass")]),s._v("上的方法列表(在上述情况下,"),e("code",[s._v("writeToFile:atomically:encoding:error")]),s._v("是在"),e("code",[s._v("NSString")]),s._v("的方法列表上的)。接着,runtime机制会执行这个方法对应的实现函数("),e("code",[s._v("IMP")]),s._v(")。")]),s._v(" "),e("p",[s._v("重要的一点是: "),e("code",[s._v("Class")]),s._v("定义了你能够发送给对象的消息(对象方法列表)。")]),s._v(" "),e("h3",{attrs:{id:"什么是meta-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是meta-class"}},[s._v("#")]),s._v(" 什么是"),e("code",[s._v("meta-Class")]),s._v("?")]),s._v(" "),e("p",[s._v("现在,像你所知道的: 一个"),e("code",[s._v("Class")]),s._v("在Objectivce-C中也是一个对象。这个就意味着你也能够给一个"),e("code",[s._v("Class")]),s._v("发送消息。")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[s._v("NSStringEncoding defaultStringEncoding "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSString defaultStringEncoding"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在这里,"),e("code",[s._v("defaultStringEncoding")]),s._v("被发送给了"),e("code",[s._v("NSString")]),s._v("类.")]),s._v(" "),e("p",[s._v("这段代码之所以会执行，是因为在Objectivce-C中每一个"),e("code",[s._v("Class")]),s._v("其本质上也是一个对象.这就意味着"),e("code",[s._v("Class")]),s._v("结构体必须是以一个"),e("code",[s._v("isa")]),s._v("指针开始的结构体,以至于它与我上面显示的"),e("code",[s._v("objc_object")]),s._v("结构体是二进制兼容的,并且下一个在结构体中的字段必须是一个指向"),e("code",[s._v("superclass")]),s._v("的指针(或者对于基本类来说就是nil).")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://www.cocoawithlove.com/2010/01/getting-subclasses-of-objective-c-class.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("像我上周展示的一样"),e("OutboundLink")],1),s._v(",这里有几种不同定义"),e("code",[s._v("Class")]),s._v("的方式,这取决于你所运行的"),e("code",[s._v("runtime")]),s._v("的版本,但是,它们都是以一个"),e("code",[s._v("isa")]),s._v("字段开头,后跟一个"),e("code",[s._v("superclass")]),s._v("字段。")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" objc_class "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" objc_class "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Class isa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    Class super_class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* followed by runtime specific details... */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("但是,为了让我们能在"),e("code",[s._v("Class")]),s._v("上执行一个方法,"),e("code",[s._v("Class")]),s._v("的"),e("code",[s._v("isa")]),s._v("指针必须指向一个"),e("code",[s._v("Class")]),s._v("结构体, 并且这个"),e("code",[s._v("Class")]),s._v("结构体必须包含了能够让我们在类上执行方法的方法列表(类方法列表).")]),s._v(" "),e("p",[s._v("这就引出了"),e("code",[s._v("meta-class")]),s._v("的定义: "),e("code",[s._v("meta-class")]),s._v("是一个"),e("code",[s._v("Class")]),s._v("对象的类.")]),s._v(" "),e("p",[s._v("简而言之:")]),s._v(" "),e("ul",[e("li",[s._v("当你给一个"),e("code",[s._v("对象")]),s._v("发送消息的时候,runtime机制会在对象的类对象的方法列表中查找该消息.")]),s._v(" "),e("li",[s._v("当你给一个"),e("code",[s._v("类")]),s._v("发送消息的时候,runtime机制会在类对象的"),e("code",[s._v("meta-class")]),s._v("的方法列表中查找该消息.")])]),s._v(" "),e("p",[e("code",[s._v("meta-class")]),s._v("是必须存在的,因为它为一个"),e("code",[s._v("Class")]),s._v("保存了该类的类方法。\n对于每一个"),e("code",[s._v("Class")]),s._v("来说,都必须有一个独一无二的"),e("code",[s._v("meta-class")]),s._v(",因为每一个"),e("code",[s._v("Class")]),s._v("都有一个可能独一无二的类方法列表.")]),s._v(" "),e("h3",{attrs:{id:"那meta-class的类的是什么呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#那meta-class的类的是什么呢"}},[s._v("#")]),s._v(" 那"),e("code",[s._v("meta-class")]),s._v("的类的是什么呢?")]),s._v(" "),e("p",[e("code",[s._v("meta-class")]),s._v("像之前的"),e("code",[s._v("Class")]),s._v("一样,它也是一个对象.这就意味着你同样能够在它之上执行方法。那它也理所当然的必须属于一个类("),e("code",[s._v("isa")]),s._v("指针)。")]),s._v(" "),e("p",[s._v("所有的"),e("code",[s._v("meta-class")]),s._v("使用基础类的"),e("code",[s._v("meta-class")]),s._v("(在它们继承体系的顶层的类的"),e("code",[s._v("meta-class")]),s._v(")作为它们的类。这就意味着所有继承自"),e("code",[s._v("NSObject")]),s._v("的类的"),e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("Class")]),s._v("("),e("code",[s._v("isa")]),s._v("指针)是"),e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v(".")]),s._v(" "),e("p",[s._v("遵循这样的规则:所有的"),e("code",[s._v("meta-class")]),s._v("都使用基本类的"),e("code",[s._v("meta-class")]),s._v("作为它们的类("),e("code",[s._v("isa")]),s._v("指针),任何基本(顶层)的"),e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("Class")]),s._v("("),e("code",[s._v("isa")]),s._v("指针)都将是它们自身(它们的"),e("code",[s._v("isa")]),s._v("始终指向自身).这就意味着"),e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("isa")]),s._v("指针是指向它自身的(它是它自身的实例).")]),s._v(" "),e("h3",{attrs:{id:"meta-class和class的继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta-class和class的继承"}},[s._v("#")]),s._v(" "),e("code",[s._v("meta-class")]),s._v("和"),e("code",[s._v("Class")]),s._v("的继承")]),s._v(" "),e("p",[s._v("相同的是"),e("code",[s._v("Class")]),s._v("使用"),e("code",[s._v("super_class")]),s._v("指针指向其父类"),e("code",[s._v("Class")]),s._v(","),e("code",[s._v("meta-class")]),s._v("使用自身的"),e("code",[s._v("super_class")]),s._v("指针指向"),e("code",[s._v("Class")]),s._v("的"),e("code",[s._v("super_class")]),s._v("的"),e("code",[s._v("meta-class")]),s._v("。(此处"),e("code",[s._v("meta-class->super_class")]),s._v(" = "),e("code",[s._v("class->super_class->meta-class")]),s._v(")")]),s._v(" "),e("p",[s._v("还有个奇葩就是,基类的"),e("code",[s._v("meta-class")]),s._v("("),e("code",[s._v("isa")]),s._v(")的"),e("code",[s._v("super_class")]),s._v("指向的是基类本身.")]),s._v(" "),e("p",[s._v("这样的继承体系导致的结果就是所有的实例,类和meta-class都继承自基类.")]),s._v(" "),e("p",[s._v("对于所有在"),e("code",[s._v("NSObject")]),s._v("体系下的实例,类和meta-class的来说，"),e("code",[s._v("NSObject")]),s._v("的所有的对象方法对它们来说都是有效的。对于类和meta-class来说,所有的"),e("code",[s._v("NSObject")]),s._v("的类方法是有效的。")]),s._v(" "),e("h3",{attrs:{id:"通过实验证明以上观点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过实验证明以上观点"}},[s._v("#")]),s._v(" 通过实验证明以上观点")]),s._v(" "),e("p",[s._v("为了证明以上观点,让我们看看我在文章开头给出的"),e("code",[s._v("ReportFunction")]),s._v("函数的输出吧.这个函数的目的是沿着"),e("code",[s._v("isa")]),s._v("指针并且打印它找到的是什么.")]),s._v(" "),e("p",[s._v("为了执行"),e("code",[s._v("ReportFunction")]),s._v("函数,我们需要创建一个动态创建的类的实例并且执行"),e("code",[s._v("report")]),s._v("对象方法.")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[s._v("id instanceOfNewClass "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("newClass alloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" initWithDomain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"someDomain"')]),s._v(" code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" userInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("instanceOfNewClass performSelector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[instanceOfNewClass release];")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("因为这里并没有声明"),e("code",[s._v("report")]),s._v("方法,所以我为了编译器不会给出一个警告，使用"),e("code",[s._v("performSelector:")]),s._v("去执行它.")]),s._v(" "),e("p",[s._v("现在"),e("code",[s._v("ReportFunction")]),s._v("将会遍历所有的isa指针并且告诉我们什么对象被用作"),e("code",[s._v("Class")]),s._v(","),e("code",[s._v("meta-Class")]),s._v("和"),e("code",[s._v("meta-Class")]),s._v("的类")]),s._v(" "),e("blockquote"),s._v(" "),e("p",[s._v("获取一个对象的类: "),e("code",[s._v("ReportFunction")]),s._v("使用"),e("code",[s._v("object_getClass")]),s._v("去得到"),e("code",[s._v("isa")]),s._v("指针,应为"),e("code",[s._v("isa")]),s._v("是类的保护成员(你不能直接的访问其他对象的"),e("code",[s._v("isa")]),s._v("指针)."),e("code",[s._v("ReportFunction")]),s._v("没有使用"),e("code",[s._v("class")]),s._v("方法的原因是: 在一个类对象上执行"),e("code",[s._v("class")]),s._v("方法不会返回"),e("code",[s._v("meta-Class")]),s._v("，它始终都只会返回"),e("code",[s._v("Class")]),s._v("(所以"),e("code",[s._v("[NSString class]会返回")]),s._v("NSString"),e("code",[s._v("类而不是")]),s._v("NSString"),e("code",[s._v("的")]),s._v("meta-class`).")]),s._v(" "),e("p",[s._v("这是NSObject的class对象方法和类方法的实现:\n"),e("img",{attrs:{src:t(513),alt:""}})]),s._v(" "),e("p",[s._v("当程序运行的时候,这是它的输出(去掉了"),e("code",[s._v("NSlog")]),s._v("的前缀):")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[s._v("This object is "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10010c810.")]),s._v("\nClass is RuntimeErrorSubclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" is NSError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nFollowing the isa pointer "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" times gives "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10010c600")]),s._v("\nFollowing the isa pointer "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" times gives "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10010c630")]),s._v("\nFollowing the isa pointer "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" times gives "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x7fff71038480")]),s._v("\nFollowing the isa pointer "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" times gives "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x7fff71038480")]),s._v("\nNSObject's class is "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x7fff710384a8")]),s._v("\nNSObject's meta class is "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x7fff71038480")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("看着下面通过反复沿着"),e("code",[s._v("isa")]),s._v("指针到达的内存地址:")]),s._v(" "),e("ul",[e("li",[s._v("对象的地址是"),e("code",[s._v("0x10010c810")])]),s._v(" "),e("li",[s._v("类的地址是"),e("code",[s._v("0x10010c600")])]),s._v(" "),e("li",[e("code",[s._v("meta-class")]),s._v("的地址为"),e("code",[s._v("0x10010c630")])]),s._v(" "),e("li",[e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("Class")]),s._v("(即"),e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v(")的地址为"),e("code",[s._v("0x7fff71038480")])]),s._v(" "),e("li",[e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("Class")]),s._v("的地址是它本身的地址")])]),s._v(" "),e("p",[s._v("地址的值除了显示了我们之前讨论的从类到"),e("code",[s._v("meta-class")]),s._v("再到"),e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v("的进展以外,其他的都并不重要.")]),s._v(" "),e("h3",{attrs:{id:"结论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),e("p",[e("code",[s._v("meta-class")]),s._v("是一个"),e("code",[s._v("Class")]),s._v("对象的类.每一个"),e("code",[s._v("Class")]),s._v("都有一个自己的独特"),e("code",[s._v("meta-class")]),s._v("(因为每个"),e("code",[s._v("Class")]),s._v("有着自己的独特的方法列表).这就意味着所有的"),e("code",[s._v("Class")]),s._v("对象都各不相同.")]),s._v(" "),e("p",[e("code",[s._v("meta-class")]),s._v("总是会确保"),e("code",[s._v("Class")]),s._v("对象拥有在层级的顶层的基类(NSObject)的对象方法和类方法,再加上基类到当前类之前的类的类方法。对于继承自"),e("code",[s._v("NSObject")]),s._v("的类来说,"),e("code",[s._v("NSObject")]),s._v("的对象和协议方法是定义给所有的"),e("code",[s._v("Class")]),s._v("(和"),e("code",[s._v("meta-class")]),s._v(")对象.")]),s._v(" "),e("p",[s._v("✍️ ：在层级顶层的NSObject的"),e("code",[s._v("meta-class")]),s._v("的"),e("code",[s._v("superclass")]),s._v("指针是指向"),e("code",[s._v("NSObject")]),s._v("的类对象的,所以继承自"),e("code",[s._v("NSObject")]),s._v("的类的"),e("code",[s._v("meta-class")]),s._v("中会包含有"),e("code",[s._v("NSObject")]),s._v("所有的对象方法和类方法。")]),s._v(" "),e("blockquote"),s._v(" "),e("p",[s._v("原文:The meta-class will always ensure that the "),e("code",[s._v("Class")]),s._v(" object has all the instance and class methods of the base class in the hierarchy, plus all of the class methods in-between. For classes descended from "),e("code",[s._v("NSObject")]),s._v(", this means that all the "),e("code",[s._v("NSObject")]),s._v(" instance and protocol methods are defined for all "),e("code",[s._v("Class")]),s._v(" (and meta-class) objects.")]),s._v(" "),e("p",[s._v("所有的"),e("code",[s._v("meta-class")]),s._v("都使用基类的"),e("code",[s._v("meta-class")]),s._v("(在"),e("code",[s._v("NSObject")]),s._v("继承体系下,是"),e("code",[s._v("NSObject")]),s._v("的"),e("code",[s._v("meta-class")]),s._v(")作为他们的类,也包括了在运行时机制中唯一自定义的基础级的"),e("code",[s._v("meta-class")]),s._v(".")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("补充:")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtTypeEncodings.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("iOS类型编码"),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("id Class meta-class 之间的关系")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(514),alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);